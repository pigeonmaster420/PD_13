# -*- coding: utf-8 -*-
"""PD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nGKwTf-_e75nvOpEomrLqQ-ZfNiR9iY0
"""

python -m pip install mysql-connector-python

python -m pip install pandas

python -m pip install fastapi

python -m pip install pyodide

import mysql.connector
from mysql.connector import Error
import pandas as pd

class querycontrol():
  def create_server_connection(host_name, user_name, user_password, db_name):
    connection = None
    try:
        connection = mysql.connector.connect(
            host=host_name,
            user=user_name,
            passwd=user_password,
            database=db_name
        )
        print("MySQL Database connection successful")
    except Error as err:
        print(f"Error: '{err}'")

    return connection


  def execute_query(connection, query):
    cursor = connection.cursor()
    try:
        cursor.execute(query)
        connection.commit()
        print("Query successful")
    except Error as err:
        print(f"Error: '{err}'")

  def build_query(args, btype, table):
    match btype:
      case "select":
        query = str(f"""SELECT {args["fields"]} FROM {table}""")
        if args["conditions"] != None:
          query = query + "\n WHERE"
          for con in args["conditions"]:
            query = query + con
            if (args["conditions"].index(con) != len(args["conditions"]) - 1):
              query = query + " AND "
            else:
              query = query + ";"
      case "insert":
        query = str(f"""INSERT INTO {table} VALUES """)
        for val in args["values"]:
          query = query + val
          if (args["values"].index(val) != len(args["values"]) - 1):
            query = query + ",\n"
          else:
            query = query + ";"
      case "alter":
        query = str(f"""UPDATE {table}\n SET\n""")
        for val in args["values"]:
          query = query + " " + val + "\n"
        query += "WHERE\n"
        for con in args["conditions"]:
          query = query + " " + con
          if (args["conditions"].index(con) != len(args["conditions"]) - 1):
            query = query + "\n"
          else:
            query = query + ";"
    return query

    def __init__(self, host_name, user_name, user_password, db_name):
      self.create_server_connection(host_name, user_name, user_password, db_name)

from js import document 

def login():
  host_name = document.getElementById("host").textContent
  user_name = document.getElementById("user").textContent
  password = document.getElementById("pass").textContent
  db_name = document.getElementByid("db").textContent
  qc = querycontrol(host_name, user_name, password, db_name)

def export_select():
  host_name = document.getElementById("host").textContent
  user_name = document.getElementById("user").textContent
  password = document.getElementById("pass").textContent
  db_name = document.getElementByid("db").textContent
  qc = querycontrol(host_name, user_name, password, db_name)
  sel = qc.build_query(args = {"fields": '*', "conditions": None}, table = "загрузка", btype="select")
  sel_df = pd.read_sql(sel, con=qc)
  return sel_df



